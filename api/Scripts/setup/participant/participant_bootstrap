#!/bin/bash

# This script is a wrapper for executing the setup_participant script on a remote
# device on the LAN using SSH.
#
# Usage: participant_bootstrap <target_host> [-u]
#   -u: uninstall the tracr user and remove all tracr files
#
# NOTE: see the setup_participant script for a description of the exit codes

# User provides the target host and optional -u flag as command-line arguments
target_host="$1"
uninstall_flag="$2"

# Check if the user has provided the target host
if [[ -z "$target_host" ]]; then
    echo "Usage: $0 target_host [-u]"
    exit 1
fi

# Check if the -u flag is provided
if [[ "$uninstall_flag" == "-u" ]]; then
    script_args="-u"
else
    script_args=""
fi

# Set status predicates
had_to_setup_participant_sys=0
participant_sys_setup_passed=0
had_to_setup_local_ssh_config=0
ssh_configuration_passed=0

# Set path to inner scripts
sys_setup_script_path="$(dirname "$(realpath "$0")")/src/participant_sys_setup"
validation_script_path="$(dirname "$(realpath "$0")")/src/validate_participant_sys_setup"
ssh_configuration_script_path="$(dirname "$(realpath "$0")")/src/configure_ssh_for_participant"
ssh_validation_script_path="$(dirname "$(realpath "$0")")/src/validate_participant_ssh_config"

# Check if the script files exist and are readable
for script in "$sys_setup_script_path" "$validation_script_path" "$ssh_configuration_script_path" "$ssh_validation_script_path"; do
    if [[ ! -f "$script" ]] || [[ ! -r "$script" ]]; then
        echo "Error: script file '$script' does not exist or is not readable"
        exit 1
    fi
done

# Don't do anything if the validation script already likes what it sees
ssh -t "$target_host" "bash -s" -- < "$validation_script_path"
if [[ $? -eq 0 ]]; then
    echo "Validation script passed. Skipping remote system setup."
    participant_sys_setup_passed=1
fi

# Use SSH to execute the setup script on the remote host
if [[ $participant_sys_setup_passed -eq 0 ]]; then
    echo "Executing setup script on remote host: $target_host"
    had_to_setup_participant_sys=1
    ssh -t "$target_host" "bash -s" -- < "$sys_setup_script_path" "$script_args"
fi

# Capture the exit code of the setup script
setup_exit_code=$?
echo "Setup script exited with code: $setup_exit_code"

# Use SSH to execute the validation script on the remote host
ssh -t "$target_host" "bash -s" -- < "$validation_script_path"

# Capture the exit code of the validation script
validation_exit_code=$?

# If the exit code of the validation script is zero, run the local script
if [[ $validation_exit_code -eq 0 ]]; then
    participant_sys_setup_passed=1
    # Also make sure ssh hasn't already been configured
    echo ""
    echo -n "What name do you want to give this device? "
    read dev_nickname
    echo ""
    dev_nickname=$(echo "$dev_nickname" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')
    hostname=$(grep -A 3 -w "Host $target_host" ~/.ssh/config | grep -i hostname | awk '{print $2}')
    echo "Nickname: $dev_nickname"
    echo "Hostname: $hostname"
    bash "$ssh_validation_script_path" $dev_nickname $hostname
    if [[ $? -eq 0 ]]; then
        echo "SSH configuration script passed. Skipping local SSH configuration."
        ssh_configuration_passed=1
    else
        echo "Executing local SSH configuration script"
        had_to_setup_local_ssh_config=1
        bash "$ssh_configuration_script_path" $dev_nickname $hostname
        bash "$ssh_validation_script_path" $dev_nickname $hostname
        if [[ $? -eq 0 ]]; then
            ssh_configuration_passed=1
        fi
    fi
else
    echo "Validation script failed with exit code: $validation_exit_code"
fi

# Return the exit code
echo ""
echo "##############  RESULTS OF PATICIPANT BOOTSTRAP  ##############"
echo ""
if [[ $participant_sys_setup_passed -eq 1 ]]; then
    if [[ $had_to_setup_participant_sys -eq 1 ]]; then
        echo "Remote system setup was successful"
    else
        echo "Remote system setup was skipped because it was already set up."
    fi
else
    echo "Remote system setup failed with exit code: $setup_exit_code"
fi
if [[ $ssh_configuration_passed -eq 1 ]]; then
    if [[ $had_to_setup_local_ssh_config -eq 1 ]]; then
        echo "Local SSH configuration was successful"
    else
        echo "Local SSH configuration was skipped because it was already set up."
    fi
else
    echo "Local SSH configuration failed."
fi
if [[ $participant_sys_setup_passed -eq 1 ]] && [[ $ssh_configuration_passed -eq 1 ]]; then
    echo ""
    echo "Setup was successful."
    echo ""
    echo "################################################################"
    echo ""
    exit 0
else
    echo ""
    echo "Setup failed."
    echo ""
    echo "################################################################"
    echo ""
    exit 1
fi 
