#!/bin/bash

# A script that wraps the tracr application (app.py) to accomplish
# the following:
#      - The user can run the setup sequence by invoking the "tracr" command
#        without worrying about manual environment setup first
#      - tracr itself (app.py) runs inside an ephemeral Docker container that
#        simply passes the user's arguments to app.py
#      - The user can run the "tracr" command from any directory as if it's a
#        locally-installed executable
#
# If the first and only positional argument is "setup", then the script will
# run the setup sequence. Otherwise, the script will run the tracr application
# with the given arguments.


# Get the repo root directory while also cd-ing into it
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"

# If the only positional argument is "setup", then run the setup sequence
if [ $# -eq 1 ] && [ $1 == "setup" ]; then
    # Make sure permissions are set correctly on setup scripts
    chmod +x $DIR/Setup/System/*.sh
    chmod +x $DIR/Setup/Container/*.sh
    # Run the setup sequence
    $DIR/Setup/System/controller_setup.sh
    # Exit with the exit code of the setup sequence
    exit $?
else
    # Check whether the tracr image exists
    if ! docker image inspect tracr &> /dev/null; then
        # Build the tracr image
        $DIR/Setup/Container/build_tracr.sh
    fi
    # Run the tracr application with the given arguments (only PersistentData
    # will be included as a volume in prod, but for dev the code will be
    # changing and we don't want to rebuild every time)
    docker run --rm -it --name tracr-runtime -v "$DIR:/app" tracr "$@"
    # Exit with the exit code of the tracr application
    exit $?
fi